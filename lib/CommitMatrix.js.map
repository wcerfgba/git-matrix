{
  "version": 3,
  "file": "CommitMatrix.js",
  "sourceRoot": "..",
  "sources": [
    "src/CommitMatrix.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# @flow\n\n{ union, difference, sortBy } = require './util'\n\n###::\ntype Score = number\n\ntype FileScore = {\n  fileName: FileName,\n  score: Score\n}\n\ntype CommitterFileScores = {\n  email: CommitEmail,\n  fileScores: Array<FileScore>\n}\n\n// commitFile and fileScore are for the same file.\ntype CommitFileScoreReducer =\n  ({\n    commitFile: CommitFile,\n    fileScore: FileScore\n  }) => Score\n\ntype MatrixFile = {\n  name: FileName,\n  totalScore: Score\n}\n###\n\nclass CommitMatrix\n  ###::\n  matrix: Array<CommitterFileScores>\n  files: Array<MatrixFile>\n  emails: Array<CommitEmail>\n  commitFileScoreReducer: CommitFileScoreReducer\n  ###\n\n  constructor: (commitFileScoreReducer) ->\n    @matrix = []\n    @files = []\n    @emails = []\n    @commitFileScoreReducer = commitFileScoreReducer\n  \n  addCommit: (commit ###: Commit ###) =>\n    @addCommitEmails commit\n    @addCommitFiles commit\n    @reshapeMatrix()\n    committer = @matrix.find (committer) =>\n      committer.email == commit.email\n    throw new Error 'Matrix did not container committer' if !committer\n    committer.fileScores.forEach (fileScore) =>\n      isFileScoreFile = (file) => file.name == fileScore.fileName\n      commitFile = commit.files.find isFileScoreFile\n      matrixFile = @files.find isFileScoreFile\n      if commitFile\n        score = @commitFileScoreReducer { commitFile, fileScore }\n        fileScore.score += score\n        matrixFile.totalScore += score\n\n  addCommitEmails: (commit) =>\n    @emails = union @emails, [commit.email]\n\n  addCommitFiles: (commit) =>\n    commitFileNames = commit.files.map (file) => file.name\n    # @files = union @files, commitFileNames\n    newFileNames = difference commitFileNames, @fileNames()\n    newFiles = newFileNames.map (fileName) =>\n      { name: fileName, totalScore: 0 }\n    @files = union @files, newFiles\n\n  # Ensure that we have an entry in the matrix for every email in `@emails`,\n  # and ensure that every committer has an entry for every file in `@files`.\n  reshapeMatrix: () =>\n    currentEmails = @matrix.map (committer) => committer.email\n    newEmails = difference @emails, currentEmails\n    newEmails.forEach (email) => \n      @matrix.push { email, fileScores: [] }\n    @matrix.forEach (committer) =>\n      committerFileNames = committer.fileScores.map (fileScore) => fileScore.fileName\n      missingFileNames = difference @fileNames(), committerFileNames\n      missingFileNames.forEach (fileName) =>\n        committer.fileScores.push { fileName, score: 0 }\n\n  sort: () =>\n    @files = sortBy @files, (file) => file.name\n    @emails = @emails.sort()\n    @matrix = sortBy @matrix, (committer) => committer.email\n    @matrix = @matrix.map (committer) =>\n      {\n        email: committer.email,\n        fileScores: sortBy committer.fileScores, (fileScore) => fileScore.fileName\n      }\n\n  fileNames: () => @files.map (file) => file.name\n\nmodule.exports = CommitMatrix"
  ]
}