{
  "version": 3,
  "file": "ChangesObjectStream.js",
  "sourceRoot": "..",
  "sources": [
    "src/ChangesObjectStream.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# @flow\n\n{ Transform } = require 'stream'\n{ compact, trim } = require './util'\n\nmatchCommitHeader = (str) ###: ?Commit ### =>\n  matches = str.match(/^(\\d+) (.*@.*)$/)\n  return null if !matches\n  {\n    time: Number matches[1]\n    email: matches[2]\n    files: []\n  }\n\nparseChangeCount = (count) =>\n  return 1 if count == '-'\n  Number count\n\nparseCommitChanges = (lines) =>\n  lines.map (line) =>\n    parts = line.split '\\t'\n    {\n      linesAdded: parseChangeCount parts[0]\n      linesDeleted: parseChangeCount parts[1]\n      name: parts[2]\n    }\n\nclass ChangesObjectStream extends Transform\n  ###::\n  lastCommit: ?Commit\n  ###\n\n  constructor: () ->\n    super({ objectMode: true })\n    @lastCommit = null\n\n  _transform: (chunk ###: Buffer | string ###) ###: void ### ->\n    chunk = chunk.toString()\n    rawCommits = chunk.split '\\n\\n\\n'\n    rawCommits = compact rawCommits\n    rawCommits = rawCommits.map trim\n    commitObjects = rawCommits.reduce (commits, raw) =>\n      lines = compact raw.split '\\n'\n      commit = matchCommitHeader lines[0]\n      if commit\n        commit.files = parseCommitChanges lines.slice 1\n        @lastCommit = commit\n        return [\n          ...commits,\n          commit\n        ]\n      commit = @lastCommit\n      throw new Error 'Stream must begin at start of a commit' if commit == null\n      changedFiles = parseCommitChanges lines\n      changedFiles.forEach (changedFile) =>\n        existingFile = commit.files.find (file) => file.name == changedFile.name\n        if existingFile\n          existingFile.linesAdded += changedFile.linesAdded\n          existingFile.linesDeleted += changedFile.linesDeleted\n        else\n          commit.files.push changedFile\n      commits\n    , []\n    commitObjects.forEach (commit) => @push commit\n\n\nmodule.exports = ChangesObjectStream"
  ]
}