{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "..",
  "sources": [
    "src/index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "#!/usr/bin/env coffee\n# @flow\n\nyargs = require 'yargs'\n{ Readable } = require 'stream'\n{ createReadStream, createWriteStream } = require 'fs'\n{ exec, spawn } = require 'child_process'\n{ UnknownMatrixError } = require './errors'\nChangesObjectStream = require './ChangesObjectStream'\nCommitCountMatrix = require './CommitCountMatrix'\nChangeCountMatrix = require './ChangeCountMatrix'\n{ matrixToHtml } = require './renderMatrix' \n\n\n# git log command preformatted for spawn and exec.\nGIT_SPAWN_CMD = [\n  'git',\n  ['--no-pager', 'log', '--format=%n%n%ct %cE', '--numstat', '--no-merges', '--no-renames'],\n  { env: { GIT_FLUSH: 0 } }\n]\n\n# GIT_CMD = [\n#   'git --no-pager log --format=\"%n%n%ct %cE\" --numstat --no-merges --no-renames',\n#   {\n#     env: { GIT_FLUSH: 0 }\n#     maxBuffer: 2 * 1024 * 1024\n#   }\n# ]\n\n\n\n(() =>\n  argv = yargs\n    .option 'i', {\n      alias: 'input'\n      describe: \"Filename of input git log. If not specified we execute the command in the working directory.\"\n      type: 'string'\n    }\n    .option 'o', {\n      alias: 'output'\n      describe: \"Output filename. If '-' we pipe to stdout.\"\n      type: 'string'\n      defaultDescription: '\"git-matrix.html\" unless --only-log'\n    }\n    .option 'm', {\n      alias: 'matrix'\n      describe: \"The function used to calculate the value of each cell.\"\n      choices: ['commits', 'changes'],\n      default: 'changes'\n    }\n    # .option 'c', {\n    #   alias: 'cooling'\n    #   describe: \"Experimental cooling function where the scores in the matrix decrement over time.\"\n    #   type: 'number'\n    # }\n    .option 'l', {\n      alias: 'only-log',\n      describe: \"Only gets the git log, which can be read in with '-i'. Output defaults to stdout.\"\n      type: 'boolean'\n    }\n    .argv\n\n  # Set defaults\n  if !argv.output\n    argv.output = 'git-matrix.html' unless argv['only-log']\n\n  outputIsStdout = !argv.output || argv.output == '-'\n  inputIsGit = !argv.input\n  onlyLog = argv['only-log']\n\n  input = createReadStream argv.input unless inputIsGit\n  input = (spawn ...GIT_SPAWN_CMD).stdout if inputIsGit\n  \n  # if argv.input\n  #   input = createReadStream argv.input\n  # else\n  #   git = await spawnSync ...GIT_CMD\n  #   # input = new Readable\n  #   # input.push git.stdout\n  #   # input.push null\n  #   # input = git.stdout\n\n  input.pause()\n\n  output = createWriteStream argv.output unless outputIsStdout\n  output = process.stdout if outputIsStdout\n\n  if onlyLog\n    input.pipe output\n    input.resume()\n  else\n    commits = new ChangesObjectStream\n    input.pipe commits\n\n    switch argv.matrix\n      when 'commits'\n        matrix = CommitCountMatrix()\n      when 'changes'\n        matrix = ChangeCountMatrix()\n      else\n        throw new UnknownMatrixError argv.matrix\n\n    end = new Promise (resolve, reject) =>\n      commits.on 'data', (commit) =>\n        console.log 'data'\n        matrix.addCommit commit\n        # console.log matrix\n      commits.on 'finish', () =>\n        console.log 'finish'\n        resolve()\n\n    input.resume()\n    await end\n\n    console.log matrix\n    matrix.sort()\n    console.log matrix\n    html = matrixToHtml matrix\n    console.log html\n    await output.write html\n\n  output.destroy() unless outputIsStdout\n)()"
  ]
}