{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "..",
  "sources": [
    "src/index.coffee"
  ],
  "names": [],
  "mappings": "AAAA;;AAAA,IAAA,iBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,YAAA,EAAA,IAAA,EAAA;;AAGA,KAAA,GAAQ,OAAA,CAAQ,OAAR;;AACR,CAAA,CAAE,QAAF,CAAA,GAAe,OAAA,CAAQ,QAAR,CAAf;;AACA,CAAA,CAAE,gBAAF,EAAoB,iBAApB,CAAA,GAA0C,OAAA,CAAQ,IAAR,CAA1C;;AACA,CAAA,CAAE,IAAF,CAAA,GAAW,OAAA,CAAQ,eAAR,CAAX;;AACA,CAAA,CAAE,kBAAF,CAAA,GAAyB,OAAA,CAAQ,UAAR,CAAzB;;AACA,mBAAA,GAAsB,OAAA,CAAQ,uBAAR;;AACtB,iBAAA,GAAoB,OAAA,CAAQ,qBAAR;;AACpB,iBAAA,GAAoB,OAAA,CAAQ,qBAAR;;AACpB,CAAA,CAAE,YAAF,CAAA,GAAmB,OAAA,CAAQ,gBAAR,CAAnB;;AAIA,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,IAAA,GAAO,IAAI,CAAC,SAAL,CAAe,IAAf;;AAIP,aAAA,GAAgB;EACd,KADc;EAEd,CAAC,YAAD;EAAe,KAAf;EAAsB,sBAAtB;EAA8C,WAA9C;EAA2D,aAA3D;EAA0E,cAA1E,CAFc;EAGd;IAAE,GAAA,EAAK;MAAE,GAAG,OAAO,CAAC,GAAb;MAAkB,SAAA,EAAW;IAA7B;EAAP,CAHc;;;AAMhB,OAAA,GAAU;EACR,8EADQ;EAER;IACE,GAAA,EAAK;MAAE,GAAG,OAAO,CAAC,GAAb;MAAkB,SAAA,EAAW;IAA7B,CADP;IAEE,SAAA,EAAW,CAAA,GAAI,IAAJ,GAAW;EAFxB,CAFQ;;;AASV,IAAA,GAAO,KACL,CAAC,MADI,CACG,GADH,EACQ;EACX,KAAA,EAAO,OADI;EAEX,QAAA,EAAU,4HAFC;EAGX,IAAA,EAAM;AAHK,CADR,CAML,CAAC,MANI,CAMG,GANH,EAMQ;EACX,KAAA,EAAO,QADI;EAEX,QAAA,EAAU,6CAFC;EAGX,IAAA,EAAM,QAHK;EAIX,kBAAA,EAAoB;AAJT,CANR,CAYL,CAAC,MAZI,CAYG,GAZH,EAYQ;EACX,KAAA,EAAO,QADI;EAEX,QAAA,EAAU,kEAFC;EAGX,OAAA,EAAS,CAAC,SAAD,EAAY,SAAZ,CAHE;EAIX,OAAA,EAAS,SAJE;;;;;;AAAA,CAZR,CAuBL,CAAC,MAvBI,CAuBG,GAvBH,EAuBQ;EACX,KAAA,EAAO,UADI;EAEX,QAAA,EAAU,mDAFC;EAGX,IAAA,EAAM;AAHK,CAvBR,CA4BL,CAAC;;AAEH,CAAC,KAAA,CAAA,CAAA,GAAA;AACC,MAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA;EAAA,IAAG,CAAC,IAAI,CAAC,MAAT;IACE,IAAA,CAAuC,IAAK,CAAA,UAAA,CAA5C;MAAA,IAAI,CAAC,MAAL,GAAc,kBAAd;KADF;;EAGA,iBAAA,GAAoB,IAAI,CAAC,MAAL,IAAe,IAAI,CAAC,MAAL,KAAe;EAElD,IAAG,IAAI,CAAC,KAAR;IACE,KAAA,GAAQ,gBAAA,CAAiB,IAAI,CAAC,KAAtB,EADV;GAAA,MAAA;IAGE,UAAA,GAAa;IACb,GAAA,GAAM,CAAA,MAAM,IAAA,CAAK,GAAG,OAAR,CAAN;IACN,KAAA,GAAQ,IAAI;IACZ,KAAK,CAAC,IAAN,CAAW,GAAG,CAAC,MAAf;IACA,KAAK,CAAC,IAAN,CAAW,IAAX,EAPF;;EAUA,IAA0C,iBAA1C;;IAAA,MAAA,GAAS,iBAAA,CAAkB,IAAI,CAAC,MAAvB,EAAT;;EACA,IAAA,CAA+B,iBAA/B;IAAA,MAAA,GAAS,OAAO,CAAC,OAAjB;;EAEA,KAAK,CAAC,KAAN,CAAA;EAEA,IAAG,IAAK,CAAA,UAAA,CAAR;IACE,KAAK,CAAC,IAAN,CAAW,MAAX;IACA,KAAK,CAAC,MAAN,CAAA,EAFF;GAAA,MAAA;IAIE,OAAA,GAAU,IAAI;IACd,KAAK,CAAC,IAAN,CAAW,OAAX;AAEA,YAAO,IAAI,CAAC,MAAZ;AAAA,WACO,SADP;QAEI,MAAA,GAAS,iBAAA,CAAA;AADN;AADP,WAGO,SAHP;QAII,MAAA,GAAS,iBAAA,CAAA;AADN;AAHP;QAMI,MAAM,IAAI,kBAAJ,CAAuB,IAAI,CAAC,MAA5B;AANV;IAQA,GAAA,GAAM,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,CAAA,GAAA;MAChB,OAAO,CAAC,EAAR,CAAW,MAAX,EAAmB,CAAC,MAAD,CAAA,GAAA,EAAA;;QAEjB,MAAM,CAAC,SAAP,CAAiB,MAAjB;eACA,OAAO,CAAC,GAAR,CAAY,MAAZ;MAHiB,CAAnB;aAIA,KAAK,CAAC,EAAN,CAAS,KAAT,EAAgB,OAAhB;IALgB,CAAZ;IAON,KAAK,CAAC,MAAN,CAAA;IACA,MAAM;IAEN,MAAM,CAAC,IAAP,CAAA;IACA,IAAA,GAAO,YAAA,CAAa,MAAb;IAEP,MAAM,CAAC,KAAP,CAAa,IAAb,EA5BF;;EA8BA,IAAoB,iBAApB;WAAA,MAAM,CAAC,OAAP,CAAA,EAAA;;AAnDD,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "#!/usr/bin/env coffee\n# @flow\n\nyargs = require 'yargs'\n{ Readable } = require 'stream'\n{ createReadStream, createWriteStream } = require 'fs'\n{ exec } = require 'child_process'\n{ UnknownMatrixError } = require './errors'\nChangesObjectStream = require './ChangesObjectStream'\nCommitCountMatrix = require './CommitCountMatrix'\nChangeCountMatrix = require './ChangeCountMatrix'\n{ matrixToHtml } = require './renderMatrix' \n\n\n\nutil = require('util')\nexec = util.promisify(exec)\n\n\n\nGIT_SPAWN_CMD = [\n  'git',\n  ['--no-pager', 'log', '--format=%n%n%ct %ae', '--numstat', '--no-merges', '--no-renames'],\n  { env: { ...process.env, GIT_FLUSH: 0 } }\n]\n\nGIT_CMD = [\n  'git --no-pager log --format=\"%n%n%ct %ae\" --numstat --no-merges --no-renames',\n  {\n    env: { ...process.env, GIT_FLUSH: 0 }\n    maxBuffer: 2 * 1024 * 1024\n  }\n]\n\n\nargv = yargs\n  .option 'i', {\n    alias: 'input'\n    describe: \"Filename of input git log output. If not specified we execute the command in the working directory and pipe in the output.\"\n    type: 'string'\n  }\n  .option 'o', {\n    alias: 'output'\n    describe: \"Output filename. If '-', we pipe to stdout.\"\n    type: 'string'\n    defaultDescription: '\"git-matrix.html\" unless --only-log'\n  }\n  .option 'm', {\n    alias: 'matrix'\n    describe: \"The function used to calculate the value for each file and user.\"\n    choices: ['commits', 'changes'],\n    default: 'changes'\n  }\n  # .option 'c', {\n  #   alias: 'cooling'\n  #   describe: \"Experimental cooling function where the scores in the matrix decrement over time.\"\n  #   type: 'number'\n  # }\n  .option 'l', {\n    alias: 'only-log',\n    describe: \"Only gets the git log. Defaults output to stdout.\"\n    type: 'boolean'\n  }\n  .argv\n\n(() =>\n  if !argv.output\n    argv.output = 'git-matrix.html' unless argv['only-log']\n\n  outputIsNotStdout = argv.output && argv.output != '-'\n\n  if argv.input\n    input = createReadStream argv.input\n  else\n    inputIsGit = true\n    git = await exec ...GIT_CMD\n    input = new Readable\n    input.push git.stdout\n    input.push null\n    # input = git.stdout\n\n  output = createWriteStream argv.output if outputIsNotStdout\n  output = process.stdout unless outputIsNotStdout\n\n  input.pause()\n\n  if argv['only-log']\n    input.pipe output\n    input.resume()\n  else\n    commits = new ChangesObjectStream\n    input.pipe commits\n\n    switch argv.matrix\n      when 'commits'\n        matrix = CommitCountMatrix()\n      when 'changes'\n        matrix = ChangeCountMatrix()\n      else\n        throw new UnknownMatrixError argv.matrix\n\n    end = new Promise (resolve, reject) =>\n      commits.on 'data', (commit) =>\n        # console.log commit\n        matrix.addCommit commit\n        console.log matrix\n      input.on 'end', resolve\n\n    input.resume()\n    await end\n\n    matrix.sort()\n    html = matrixToHtml matrix\n\n    output.write html\n\n  output.destroy() if outputIsNotStdout\n)()"
  ]
}