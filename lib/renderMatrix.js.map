{
  "version": 3,
  "file": "renderMatrix.js",
  "sourceRoot": "..",
  "sources": [
    "src/renderMatrix.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# @flow\n\n{ range, floor } = require './util'\n\nelMap = (xs) => (f) => (xs.map f).join ''\n\nmatrixToHtml = (matrix ###: CommitMatrix ###) ###: string ### =>\n  layout({ style: stylesheet matrix }) ...[\n    header matrix\n    table matrix\n  ]\n\nstylesheet = (matrix) =>\n  \"\"\"\n  body {\n    margin: 0;\n  }\n\n  table {\n    table-layout: fixed;\n    width: 100%;\n  }\n\n  col {\n    width: #{columnWidthPercentage matrix};\n  }\n\n  th, td {\n    font-weight: normal;\n    font-size: 1rem;\n    padding: 0.25rem;\n    height: 3rem;\n  }\n\n  th {\n    text-align: left;\n    font-family: monospace;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  td {\n    text-align: center;\n    font-family: sans-serif;\n  }\n  \"\"\"\n\ncolumnWidthPercentage = (matrix) =>\n  numCols = matrix.emails.count + 1\n  ratio = 1 / numCols\n  percentage = floor (ratio * 100)\n  \"#{percentage}%\"\n\nlayout = ({ style }) => (...bodyContent) =>\n  \"\"\"\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      <style>\n        #{style}\n      </style>\n    </head>\n    <body>\n      #{bodyContent.join '\\n'}\n    </body>\n  </html>\n  \"\"\"\n\nheader = (matrix) =>\n  \"\"\"\n  \"\"\"\n\ntable = (matrix) =>\n  \"\"\"\n  <table>\n    <colgroup>\n      #{\n        range(matrix.emails.count + 1).map () =>\n          \"<col></col>\"\n      }\n    </colgroup>\n    <tbody>\n      <tr>\n        <td></td>\n        #{tableHeading({ scope: 'col' }) ...matrix.emails}\n      </tr>\n      #{fileRows matrix}\n    </tbody>\n  </table>\n  \"\"\"\n\ntableHeading = ({ scope }) => (...headings) =>\n  headings\n    .map (heading) => \"<th scope='#{scope}'>#{heading}</th>\"\n    .join '\\n'\n\nfileRows = (matrix) =>\n  console.log matrix.files\n  matrix.files\n    .map (file, fileIndex) =>\n      \"\"\"\n      <tr>\n        #{tableHeading({ scope: 'row' }) file.name}\n        #{\n          matrix.matrix\n            .map (committer) => \"<td>#{committer.fileScores[fileIndex].score}</td>\"\n            .join '\\n'\n        }\n      </tr>\n      \"\"\"\n    .join '\\n'\n\nmodule.exports = {\n  matrixToHtml\n}"
  ]
}